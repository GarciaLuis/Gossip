// Code generated by go-swagger; DO NOT EDIT.

package posts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeletePostReader is a Reader for the DeletePost structure.
type DeletePostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeletePostNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeletePostBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeletePostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeletePostNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeletePostNoContent creates a DeletePostNoContent with default headers values
func NewDeletePostNoContent() *DeletePostNoContent {
	return &DeletePostNoContent{}
}

/*DeletePostNoContent handles this case with default header values.

No Content
*/
type DeletePostNoContent struct {
}

func (o *DeletePostNoContent) Error() string {
	return fmt.Sprintf("[DELETE /posts/{id}][%d] deletePostNoContent ", 204)
}

func (o *DeletePostNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePostBadRequest creates a DeletePostBadRequest with default headers values
func NewDeletePostBadRequest() *DeletePostBadRequest {
	return &DeletePostBadRequest{}
}

/*DeletePostBadRequest handles this case with default header values.

Bad Request
*/
type DeletePostBadRequest struct {
}

func (o *DeletePostBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /posts/{id}][%d] deletePostBadRequest ", 400)
}

func (o *DeletePostBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePostUnauthorized creates a DeletePostUnauthorized with default headers values
func NewDeletePostUnauthorized() *DeletePostUnauthorized {
	return &DeletePostUnauthorized{}
}

/*DeletePostUnauthorized handles this case with default header values.

Unauthorized
*/
type DeletePostUnauthorized struct {
}

func (o *DeletePostUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /posts/{id}][%d] deletePostUnauthorized ", 401)
}

func (o *DeletePostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePostNotFound creates a DeletePostNotFound with default headers values
func NewDeletePostNotFound() *DeletePostNotFound {
	return &DeletePostNotFound{}
}

/*DeletePostNotFound handles this case with default header values.

Post Not Found
*/
type DeletePostNotFound struct {
}

func (o *DeletePostNotFound) Error() string {
	return fmt.Sprintf("[DELETE /posts/{id}][%d] deletePostNotFound ", 404)
}

func (o *DeletePostNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
