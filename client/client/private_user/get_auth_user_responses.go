// Code generated by go-swagger; DO NOT EDIT.

package private_user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/garcialuis/Gossip/client/models"
)

// GetAuthUserReader is a Reader for the GetAuthUser structure.
type GetAuthUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAuthUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAuthUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAuthUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAuthUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAuthUserOK creates a GetAuthUserOK with default headers values
func NewGetAuthUserOK() *GetAuthUserOK {
	return &GetAuthUserOK{}
}

/*GetAuthUserOK handles this case with default header values.

User record that may include sensitive information
*/
type GetAuthUserOK struct {
	Payload *models.User
}

func (o *GetAuthUserOK) Error() string {
	return fmt.Sprintf("[GET /private/users/{id}][%d] getAuthUserOK  %+v", 200, o.Payload)
}

func (o *GetAuthUserOK) GetPayload() *models.User {
	return o.Payload
}

func (o *GetAuthUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthUserBadRequest creates a GetAuthUserBadRequest with default headers values
func NewGetAuthUserBadRequest() *GetAuthUserBadRequest {
	return &GetAuthUserBadRequest{}
}

/*GetAuthUserBadRequest handles this case with default header values.

Bad Request
*/
type GetAuthUserBadRequest struct {
}

func (o *GetAuthUserBadRequest) Error() string {
	return fmt.Sprintf("[GET /private/users/{id}][%d] getAuthUserBadRequest ", 400)
}

func (o *GetAuthUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAuthUserUnauthorized creates a GetAuthUserUnauthorized with default headers values
func NewGetAuthUserUnauthorized() *GetAuthUserUnauthorized {
	return &GetAuthUserUnauthorized{}
}

/*GetAuthUserUnauthorized handles this case with default header values.

Unauthorized
*/
type GetAuthUserUnauthorized struct {
}

func (o *GetAuthUserUnauthorized) Error() string {
	return fmt.Sprintf("[GET /private/users/{id}][%d] getAuthUserUnauthorized ", 401)
}

func (o *GetAuthUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
