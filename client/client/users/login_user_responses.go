// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/garcialuis/Gossip/client/models"
)

// LoginUserReader is a Reader for the LoginUser structure.
type LoginUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LoginUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLoginUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 422:
		result := NewLoginUserUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLoginUserOK creates a LoginUserOK with default headers values
func NewLoginUserOK() *LoginUserOK {
	return &LoginUserOK{}
}

/*LoginUserOK handles this case with default header values.

Authorization Token
*/
type LoginUserOK struct {
	Payload *models.Token
}

func (o *LoginUserOK) Error() string {
	return fmt.Sprintf("[POST /login][%d] loginUserOK  %+v", 200, o.Payload)
}

func (o *LoginUserOK) GetPayload() *models.Token {
	return o.Payload
}

func (o *LoginUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Token)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoginUserUnprocessableEntity creates a LoginUserUnprocessableEntity with default headers values
func NewLoginUserUnprocessableEntity() *LoginUserUnprocessableEntity {
	return &LoginUserUnprocessableEntity{}
}

/*LoginUserUnprocessableEntity handles this case with default header values.

Unprocessable Entity
*/
type LoginUserUnprocessableEntity struct {
}

func (o *LoginUserUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /login][%d] loginUserUnprocessableEntity ", 422)
}

func (o *LoginUserUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
